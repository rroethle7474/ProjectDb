trigger:
  branches:
    include:
    - main
  paths:
    include:
    - 'ProjectDB/**'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureSubscription: 'JCL-SQL-01v1'  # Replace with your service connection name
  serverName: 'rpr-2025-jcl-v1.database.windows.net' # Replace with your server name
  databaseName: 'ProjectDB'

stages:
- stage: Build
  jobs:
  - job: BuildDacpac
    pool:
      vmImage: 'windows-latest'
    variables:
      solution: '**/*.sqlproj'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    steps:
    - task: NuGetToolInstaller@1
    
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    
    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/p:OutDir=$(build.artifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: DeployDev
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  variables:
    SchemaPrefix: 'gift_dev'
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'windows-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              AuthenticationType: 'sqlAuthentication'
              ServerName: '$(serverName)'
              DatabaseName: '$(databaseName)'
              DacpacFile: '$(Pipeline.Workspace)/drop/ProjectDB.dacpac'
              SqlUsername: '$(SqlUsername)'
              SqlPassword: '$(SqlPassword)'
              additionalArguments: '/v:SchemaPrefix="$(SchemaPrefix)"'

- stage: DeployTest
  dependsOn: DeployDev
  condition: succeeded()
  variables:
    SchemaPrefix: 'gift_test'
  jobs:
  - deployment: Deploy
    environment: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              AuthenticationType: 'servicePrincipal'
              ServerName: '$(serverName)'
              DatabaseName: '$(databaseName)'
              DacpacFile: '$(Pipeline.Workspace)/drop/ProjectDB.dacpac'
              SqlUsername: '$(SqlUsername)'
              SqlPassword: '$(SqlPassword)'
              additionalArguments: '/v:SchemaPrefix="$(SchemaPrefix)"'

- stage: DeployProd
  dependsOn: DeployTest
  condition: succeeded()
  variables:
    SchemaPrefix: 'gift_prod'
  jobs:
  - deployment: Deploy
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              AuthenticationType: 'servicePrincipal'
              ServerName: '$(serverName)'
              DatabaseName: '$(databaseName)'
              DacpacFile: '$(Pipeline.Workspace)/drop/ProjectDB.dacpac'
              SqlUsername: '$(SqlUsername)'
              SqlPassword: '$(SqlPassword)'
              additionalArguments: '/v:SchemaPrefix="$(SchemaPrefix)"'